!!ARBvp1.0
OPTION ARB_position_invariant;

# input:
#--------------------------------
# texcoord[0]	= TEX0 texcoords
# 
# local[0]		= offset scale
# local[1]		= center location
# local[2]		= mask distance

PARAM	invFarClip	= 0.0001220703125;
PARAM	DEG2RAD		= 0.017453292519943295769236907684886;

MOV		result.texcoord[0], vertex.texcoord[0];
MUL		result.texcoord[1], program.local[0], DEG2RAD;
MOV		result.texcoord[2], program.local[1];
MUL 	result.texcoord[3], program.local[2], invFarClip;

END

#=====================================================================================

!!ARBfp1.0 
OPTION ARB_precision_hint_nicest;

# texture 0	= _currentRender
#
# env[0]	= 1.0 to _currentRender conversion
# env[1]	= fragment.position to 0.0 - 1.0 conversion

OUTPUT 	oColor 	= result.color;

ATTRIB	fPos	= fragment.position;
ATTRIB	TC		= fragment.texcoord[0];
ATTRIB	Scale	= fragment.texcoord[1];
ATTRIB	Center	= fragment.texcoord[2];
ATTRIB	Mask	= fragment.texcoord[3];

PARAM 	nonPoT	= program.env[0];
PARAM 	invRes	= program.env[1];

# linear distribution
PARAM	d0		= 0.20000000;
PARAM	d1		= 0.17777778;
PARAM	d2		= 0.15555556;
PARAM	d3		= 0.13333333;
PARAM	d4		= 0.11111111;
PARAM	d5		= 0.08888889;
PARAM	d6		= 0.06666667;
PARAM	d7		= 0.04444444;
PARAM	d8		= 0.02222222;

# mean distribution
# PARAM	d0		= 0.11111111;
# PARAM	d1		= 0.11111111;
# PARAM	d2		= 0.11111111;
# PARAM	d3		= 0.11111111;
# PARAM	d4		= 0.11111111;
# PARAM	d5		= 0.11111111;
# PARAM	d6		= 0.11111111;
# PARAM	d7		= 0.11111111;
# PARAM	d8		= 0.11111111;

PARAM	const	= { 0.0, 0.5 };
PARAM 	pi		=   3.1415926535897932384626433832795;
PARAM 	halfpi	=   1.5707963267948966192313216916398;
PARAM	dcode24	= { 1.0, 0.003921568627450980392156862745098, 0.000015259021896696421759365224689097 };

TEMP 	uv, color, center, radius, angle, dist;
TEMP	R0, R1, R2, R3, R4, R5, R6, R7, R8;
TEMP 	D0, D1, D2, D3, D4, D5, D6, D7, D8;


# calculate the screen texcoord in the 0.0 to 1.0 range
MUL 	uv, fPos.xyxy, invRes.xyxy;

# calculate radius
ADD		dist, uv, -Center;
MOV 	dist.z, const.x;
DP3 	radius.w, dist, dist;
POW 	radius.x, radius.w, const.y;

# calculate angle - atan2()
ABS 	R2, dist;
MAX 	R1.x, R2.x, R2.y;
MIN 	R1.y, R2.x, R2.y;
RCP 	R1.x, R1.x;
MUL 	R1.x, R1.x, R1.y;
MUL 	R1.y, R1.x, R1.x;
MAD 	R1.w, R1.y, -0.013480470, 0.057477314;
MAD 	R1.w, R1.w, R1.y, -0.121239071;
MAD 	R1.w, R1.w, R1.y,  0.195635925;
MAD 	R1.w, R1.w, R1.y, -0.332994597;
MAD 	R1.w, R1.w, R1.y, 0.999995630;
MUL 	R1.x, R1.w, R1.x;
ADD 	R2.w, R2.x, -R2.y;
ADD 	R2.x, halfpi, -R1.x;
CMP 	R1.x, R2.w, R2.x, R1.x;
ADD 	R2.x, pi, -R1.x;
CMP 	R1.x, dist.x, R2.x, R1.x;
CMP 	R1.x, dist.y, -R1.x, R1.x;
MOV 	angle.x, R1.x;

# calculate offsets
ADD 	angle.x, angle.x, Scale;
SCS 	R1, angle.x;
MAD_SAT R1, R1, radius.x, Center;
ADD 	angle.x, angle.x, Scale;
SCS 	R2, angle.x;
MAD_SAT R2, R2, radius.x, Center;
ADD 	angle.x, angle.x, Scale;
SCS 	R3, angle.x;
MAD_SAT R3, R3, radius.x, Center;
ADD 	angle.x, angle.x, Scale;
SCS 	R4, angle.x;
MAD_SAT R4, R4, radius.x, Center;
ADD 	angle.x, angle.x, Scale;
SCS 	R5, angle.x;
MAD_SAT R5, R5, radius.x, Center;
ADD 	angle.x, angle.x, Scale;
SCS 	R6, angle.x;
MAD_SAT R6, R6, radius.x, Center;
ADD 	angle.x, angle.x, Scale;
SCS 	R7, angle.x;
MAD_SAT R7, R7, radius.x, Center;
ADD 	angle.x, angle.x, Scale;
SCS 	R8, angle.x;
MAD_SAT R8, R8, radius.x, Center;

TEX 	D0, uv, texture[1], 2D;
TEX 	D1, R1, texture[1], 2D;
TEX 	D2, R2, texture[1], 2D;
TEX 	D3, R3, texture[1], 2D;
TEX 	D4, R4, texture[1], 2D;
TEX 	D5, R5, texture[1], 2D;
TEX 	D6, R6, texture[1], 2D;
TEX 	D7, R7, texture[1], 2D;
TEX 	D8, R8, texture[1], 2D;

DP3 	D0, D0, dcode24;
DP3 	D1.x, D1, dcode24;
DP3 	D1.y, D2, dcode24;
DP3 	D1.z, D3, dcode24;
DP3 	D1.w, D4, dcode24;
DP3 	D2.x, D5, dcode24;
DP3 	D2.y, D6, dcode24;
DP3 	D2.z, D7, dcode24;
DP3 	D2.w, D8, dcode24;

SLT 	D0, D0, Mask;
SLT 	D1, D1, Mask;
SLT 	D2, D2, Mask;

CMP 	R1, -D1.x, uv, R1;
CMP 	R2, -D1.y, uv, R2;
CMP 	R3, -D1.z, uv, R3;
CMP 	R4, -D1.w, uv, R4;
CMP 	R5, -D2.x, uv, R5;
CMP 	R6, -D2.y, uv, R6;
CMP 	R7, -D2.z, uv, R7;
CMP 	R8, -D2.w, uv, R8;

TEX		R0, uv, texture[0], 2D;
TEX		R1, R1, texture[0], 2D;
TEX		R2, R2, texture[0], 2D;
TEX		R3, R3, texture[0], 2D;
TEX		R4, R4, texture[0], 2D;
TEX		R5, R5, texture[0], 2D;
TEX		R6, R6, texture[0], 2D;
TEX		R7, R7, texture[0], 2D;
TEX		R8, R8, texture[0], 2D;

MUL 	color, R0, d0;
MAD 	color, R1, d1, color;
MAD 	color, R2, d2, color;
MAD 	color, R3, d3, color;
MAD 	color, R4, d4, color;
MAD 	color, R5, d5, color;
MAD 	color, R6, d6, color;
MAD 	color, R7, d7, color;
MAD 	color, R8, d8, color;

CMP 	color, -D0, R0, color;

MOV 	oColor.xyz, color;

END